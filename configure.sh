#!/bin/sh
# WIP
# Copyright (c) 2021 Jovan Lanik

# Makefile configure script

export LC_ALL=C

DEFAULT='CC=gcc
NAME=demo
NDEBUG=0
WINDOW_BACKEND=glfw
prefix=/usr/local
exec_prefix=$(prefix)
bindir=$(exec_prefix)/bin'

OUT='/dev/stdout'
DRY='0'
FILE='mkconf.mk'

usage() {
cat << EOF
Usage: $0 [OPTIONS] [OPERANDS]
  -h	show usage and exit
  -q	suppress standard output
  -n	don't write to file
  -i	ignore defaults
  -o=F	write to F instead of $FILE

OPERANDS should be formated as VARIABLE=VALUE or VARIABLE.
A variable without a value will be set to '1'.

Defaults are:
EOF
echo "$DEFAULT" | sed 's/^/  /'
exit 0
}

error() {
	echo "$0: $1." >&2
	exit 1
}

while getopts ":hqnio:" opt
do
	case $opt in
		h) usage;;
		q) OUT='/dev/null';;
		n) DRY='1';;
		i) DEFAULT='';;
		o) FILE=$OPTARG;;
		:) error "Option -$OPTARG requires an argument. Use -h to see usage";;
		\?) error "Invalid option: -$OPTARG. Use -h to see usage";;
	esac
done
shift "$((OPTIND-1))"

[ "$DRY" = '1' ] && FILE='/dev/null'

for i in $DEFAULT
do
	case $i in
		?*=?*)
			VAR=${i%=*}
			VAL=${i#*=}
			;;
		?*)
			VAR=$i
			VAL=1
			;;
	esac
	eval "export '${VAR}'='${VAL}'"
	LIST="$LIST $VAR"
done

while true
do
	case $1 in
		-*) error 'Unexpected option. Options must precede operands';;
		?*=?*)
			case ${1#*=} in *=*) error 'Multiple equal signs in single operand';; esac
			VAR=${1%=*}
			VAL=${1#*=}
			;;
		?*)
			case $1 in *=*) error 'Unexpected equal sign in operand';; esac
			VAR=$1
			VAL=1
			;;
		*) break
	esac
	eval "export '${VAR}'='${VAL}'"
	LIST="$LIST $VAR"
	shift
done

echo "# This file is generated by $0 but feel free to edit it manually" > "$FILE"
for i in $(echo "$LIST" | tr ' ' '\n' | sort -u)
do
	LINE="$i = $(eval echo \$$i)"
	echo "$LINE" >> $OUT
	echo "$LINE" >> $FILE
done


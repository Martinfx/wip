#!/usr/bin/env oil
#
# WIP
# Copyright (c) 2021 Jovan Lanik
#

# Config generator

export LC_ALL=C

proc error(message='Error') {
	write -- "$0: $message." > /dev/stderr
	exit 1
}

var list = {
	CC: 'gcc', NAME: 'demo', NDEBUG: 0, WINDOW_BACKEND: 'glfw',
	prefix: '/usr/local', exec_prefix: '$(prefix)', bindir: '$(exec_prefix)/bin'
}

var file = 'config.mk'
var output = '/dev/stdout'
var dry = false

usage() {
	cat <<-EOF
	Usage: $0 [OPTIONS] [OPERANDS]
	  -h	show usage and exit
	  -q	suppress standard output
	  -n	don't write to file
	  -i	ignore defaults
	  -o=F	write to F instead of $file

	OPERANDS should be formated as VARIABLE=VALUE or VARIABLE.
	A variable without a value will be set to '1'.

	Defaults are:
	EOF
	printlist | sed 's/^/  /'
	exit 0
}

printlist() {
	for i in @list {
		write -- "$i = $[list[$i]]"
	}
}

while getopts "hqnio:" opt {
	case $opt {
		(h)
			usage
			;;
		(q)
			setvar output = '/dev/null'
			;;
		(n)
			setvar dry = true
			;;
		(i)
			setvar list = { }
			;;
		(o)
			setvar file = $OPTARG
			;;
		(?)
			error "Invalid option. Use -h to see usage"
			;;
	}
}
shift $(($OPTIND - 1))

if (dry) { setvar file = '/dev/null' }

for operand in @ARGV {
	case $operand {
		(-*)
			error 'Unexpected option. Options must precede operands'
			;;
		(?*=?*)
			case ${operand#*=} {
				(*=*)
					error 'Multiple equal signs in single operand'
					;;
			}
			setvar list[${operand%=*}] = ${operand#*=}
			;;
		?*)
			case $operand {
				(*=*)
					error 'Unexpected equal sign in operand'
					;;
			}
			setvar list[$operand] = 1
			;;
	}
}

write -- "# This file is generated by $0 but feel free to edit it manually" > $file
printlist | sort | tee -a $file > $output
